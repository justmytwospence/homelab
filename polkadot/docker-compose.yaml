version: "3"

networks:

  default:
    name: polkadot

  prometheus:
    external:
      name: prometheus

  traefik:
    external:
      name: traefik

services:

  polkadot:
    container_name: polkadot
    dns: [ 192.168.1.1 ]
    image: parity/polkadot:latest
    restart: unless-stopped
    command:
      - --chain=polkadot
      - --in-peers=25
      - --log=info
      - --name=PolkaMcDotFace
      - --out-peers=25
      - --port=30333 # default 30333
      - --prometheus-external
      - --prometheus-port=9615 # default 9615
      - --pruning=archive
      - --rpc-cors=all
      - --rpc-external
      - --rpc-port=9933 # default 9933
      # - --validator
      - --ws-external
      - --ws-port=9944 # default 9944
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 16G
    networks:
      - default
      - prometheus
    ports:
      - 9944:9944 # ws
      - 30333:30333 # p2p
    volumes:
      - polkadot:/polkadot

  polkadotui:
    container_name: polkadotui
    image: jacogr/polkadot-js-apps:latest
    restart: unless-stopped
    depends_on:
      polkadot:
        condition: service_started
    environment:
      WS_URL: "ws://${HOST_IP}:9944"
    labels:
      traefik.enable: true
      traefik.http.routers.polkadot.middlewares: authelia, error-pages, whitelist-lan@file
      traefik.http.routers.polkadot.rule: "Host(`polkadot.${DOMAIN}`)"
      traefik.http.services.polkadot.loadbalancer.server.port: 80
    networks:
      - default
      - traefik

volumes:

  polkadot:
    driver: local
    name: polkadot
    driver_opts:
      device: :/Polkadot
      o: addr=192.168.1.3,nfsvers=4,rw
      type: nfs
