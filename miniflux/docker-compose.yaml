version: "3"

networks:

  default:
    name: miniflux-net

  prometheus-net:
    external:
      name: prometheus-net

  traefik-net:
    external:
      name: traefik-net

services:

  db:
    container_name: miniflux-db
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
    volumes:
      - ./db:/var/lib/postgresql/data

  miniflux:
    container_name: miniflux
    image: miniflux/miniflux:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      ADMIN_USERNAME: "${ADMIN_USERNAME}"
      BASE_URL: "https://miniflux.${DOMAIN}"
      BATCH_SIZE: 100 # default 100
      CREATE_ADMIN: 1
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@miniflux-db/miniflux?sslmode=disable"
      DEBUG: 0
      FETCH_YOUTUBE_WATCH_TIME: 1
      HTTP_CLIENT_TIMEOUT: 30 # seconds
      LOG_DATE_TIME: 1
      METRICS_ALLOWED_NETWORKS: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      METRICS_COLLECTOR: 1
      POCKET_CONSUMER_KEY: "${POCKET_CONSUMER_KEY}"
      POLLING_SCHEDULER: entry_frequency
      RUN_MIGRATIONS: 1
      SCHEDULER_ENTRY_FREQUENCY_MAX_INTERVAL: 480 # 8 hours
      WORKER_POOL_SIZE: 3
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]
    labels:
      traefik.enable: true
      traefik.http.routers.miniflux-api.rule: Host(`miniflux.${DOMAIN}`) && PathPrefix(`/fever`)
      traefik.http.routers.miniflux.middlewares: authelia, error-pages
      traefik.http.services.miniflux.loadbalancer.server.port: 8080
    logging:
      options:
        max-file: "3"
        max-size: 10M
    networks:
      - default
      - prometheus-net
      - traefik-net
