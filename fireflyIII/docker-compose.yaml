version: "3"

networks:

  default:
    name: firefly

  traefik:
    external:
      name: traefik

services:

  firefly:
    container_name: firefly
    image: fireflyiii/core:latest
    depends_on:
      db:
        condition: service_started
    environment:
      APP_KEY: "${APP_KEY}"
      APP_URL: "https://firefly.${DOMAIN}"
      DB_CONNECTION: pgsql
      DB_DATABASE: "${POSTGRES_DB}"
      DB_HOST: firefly-db
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_PORT: 5432
      DB_USERNAME: "${POSTGRES_USER}"
      TRUSTED_PROXIES: "**"
      TZ: "${TZ}"
    labels:
      traefik.enable: true
      traefik.http.routers.firefly.middlewares: authelia, error-pages
      traefik.http.services.firefly.loadbalancer.server.port: 8080
    networks:
      - default
      - traefik
    volumes:
      - ./upload:/var/www/html/storage/upload

  db:
    container_name: firefly-db
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
    volumes:
      - ./db/postgres.conf:/etc/postgresql/postgresql.conf
      - ./db/pgdata:/var/lib/postgresql/data

  ynab-importer:
    container_name: ynab-importer
    image: fireflyiii/ynab-importer:latest
    restart: unless-stopped
    environment:
      FIREFLY_III_ACCESS_TOKEN: "${ACCESS_TOKEN}"
      FIREFLY_III_URL: "firefly.${DOMAIN}"
      YNAB_API_CODE: "${YNAB_API_CODE}"
    labels:
      traefik.enable: true
      traefik.http.routers.ynab.middlewares: authelia, error-pages
      traefik.http.services.ynab.loadbalancer.server.port: 8080
    networks:
      - default
      - traefik
