version: "3"

networks:

  default:
    name: librephotos

  nextcloud:
    external:
      name: nextcloud

  traefik:
    external:
      name: traefik

services:

  backend:
    container_name: librephotos-backend
    image: reallibrephotos/librephotos:dev
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      ADMIN_EMAIL: "librephotos@${DOMAIN}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      ADMIN_USERNAME: "${ADMIN_USERNAME}"
      BACKEND_HOST: backend
      DB_BACKEND: postgresql
      DB_HOST: db
      DB_NAME: librephotos
      DB_PASS: "${POSTGRES_PASSWORD}"
      DB_PORT: 5432
      DB_USER: librephotos
      DEBUG: 1
      MAPBOX_API_KEY:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SECRET_KEY: "${SECRET_KEY}"
      SKIP_PATTERNS:
      TIME_ZONE: "${TZ}"
      WEB_CONCURRENCY: 2
    networks:
      - default
      - nextcloud
    volumes:
      - ./cache:/root/.cache
      - ./photos:/data # photos
      - ./protected_media:/protected_media # thumbnails etc
      - /var/log/librephotos:/logs

  db:
    container_name: librephotos-db
    image: postgres:13.2
    restart: unless-stopped
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    environment:
      POSTGRES_DB: librephotos
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: librephotos
    volumes:
      - ./db:/var/lib/postgresql/data

  frontend:
    container_name: librephotos-frontend
    image: reallibrephotos/librephotos-frontend:dev
    restart: unless-stopped
    depends_on:
      - backend

  proxy:
    container_name: librephotos-proxy
    image: reallibrephotos/librephotos-proxy:dev
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    labels:
      traefik.enable: true
      traefik.http.routers.librephotos.middlewares: error-pages
      traefik.http.services.librephotos.loadbalancer.server.port: 80
      traefik.http.routers.librephotos.rule: Host(`librephotos.${DOMAIN}`)
    networks:
      - default
      - traefik
    volumes:
      - ./photos:/data
      - ./protected_media:/protected_media

  redis:
    command: redis-server
    container_name: librephotos-redis
    image: redis:6.2.1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - redis:/data

volumes:

  redis:
    name: librephotos-redis
